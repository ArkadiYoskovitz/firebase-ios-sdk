os:
  - osx
  - linux
osx_image: xcode11.1
language: objective-c
dist: xenial
cache:
  - bundler
  - cocoapods

stages:
  - checks
  - test

before_script:
  - '[ ! -z $DANGER_GITHUB_API_TOKEN ] && bundle exec danger || echo "Skipping Danger for External Contributor"'

jobs:
  include:
    - stage: checks
      os: osx
      # This only needs to be run once, so restrict it to an arbitrary combination
      before_install:
        - brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/e3496d9/Formula/clang-format.rb
        - brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/7963c3d/Formula/swiftformat.rb
        - pip install flake8
      script:
        - ./scripts/check.sh --test-only

    # The order of builds matters (even though they are run in parallel):
    # Travis will schedule them in the same order they are listed here.

    - stage: test
      os: osx
      env:
        - PROJECT=Firebase PLATFORM=iOS METHOD=xcodebuild
      before_install:
        - ./scripts/if_changed.sh ./scripts/install_prereqs.sh
      script:
        - travis_retry ./scripts/if_changed.sh ./scripts/build.sh $PROJECT $PLATFORM

    - stage: test
      os: osx
      env:
        - PROJECT=Firestore PLATFORM=iOS METHOD=xcodebuild
      before_install:
        - ./scripts/if_changed.sh ./scripts/install_prereqs.sh
      script:
        - travis_retry ./scripts/if_changed.sh ./scripts/build.sh $PROJECT $PLATFORM $METHOD

    - stage: test
      os: osx
      osx_image: xcode10.3
      env:
        - PROJECT=Firestore PLATFORM=iOS METHOD=xcodebuild
      before_install:
        - ./scripts/if_changed.sh ./scripts/install_prereqs.sh
      script:
        - travis_retry ./scripts/if_changed.sh ./scripts/build.sh $PROJECT $PLATFORM $METHOD

    - stage: test
      os: linux
      env:
        - PROJECT=Firestore PLATFORM=Linux METHOD=cmake
      before_install:
        - ./scripts/if_changed.sh ./scripts/install_prereqs.sh
      script:
        - travis_retry ./scripts/if_changed.sh ./scripts/build.sh $PROJECT $PLATFORM $METHOD

  allow_failures:
    # Run fuzz tests only on cron jobs.
    - stage: test
      if: type = cron
      env:
        - PROJECT=Firestore PLATFORM=iOS METHOD=fuzz
      before_install:
        - ./scripts/install_prereqs.sh
      script:
        # The travis_wait is necessary because fuzzing runs for 40 minutes.
        - travis_wait 45 ./scripts/fuzzing_ci.sh

    # TODO(varconst): UBSan for CMake. UBSan failures are non-fatal by default,
    # need to make them fatal for the purposes of the test run.

  # TODO(varconst): disallow sanitizers to fail once we fix all existing issues.
    - env:
      - PROJECT=Firestore PLATFORM=macOS METHOD=cmake SANITIZERS=tsan
    - env:
      - PROJECT=Firestore PLATFORM=iOS METHOD=xcodebuild SANITIZERS=tsan
    - env:
      - PROJECT=GoogleDataTransportIntegrationTest PLATFORM=iOS METHOD=xcodebuild

  # TODO(varconst): enable if it's possible to make this flag work on build
  # stages. It's supposed to avoid waiting for jobs that are allowed to fail
  # before reporting the results.
  # fast_finish: true

branches:
  only:
    - master
